{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/formBuilder.js\";\nimport React, { Fragment } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form } from \"semantic-ui-react\";\n\nvar renderCheckbox = function renderCheckbox(field) {\n  return React.createElement(Form.Checkbox, {\n    checked: !!field.input.value,\n    name: field.input.name,\n    label: field.label,\n    onChange: function onChange(e, _ref) {\n      var checked = _ref.checked;\n      return field.input.onChange(checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nvar renderTextArea = function renderTextArea(field) {\n  return React.createElement(Form.TextArea, Object.assign({}, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nvar renderTextField = function renderTextField(field) {\n  React.createElement(Form.Input, {\n    name: field.input.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n};\n\nvar FormBuilder = function FormBuilder(props) {\n  var handleSubmit = props.handleSubmit,\n      reset = props.reset;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: renderCheckbox,\n    label: \"Test\",\n    name: \"Testtttt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default reduxForm({\n  form: \"profile\"\n})(FormBuilder);","map":{"version":3,"sources":["/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/formBuilder.js"],"names":["React","Fragment","Field","reduxForm","Form","renderCheckbox","field","input","value","name","label","e","checked","onChange","renderTextArea","placeholder","renderTextField","FormBuilder","props","handleSubmit","reset","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,QAAN;AACI,IAAA,OAAO,EAAE,CAAC,CAACA,KAAK,CAACC,KAAN,CAAYC,KAD3B;AAEI,IAAA,IAAI,EAAEF,KAAK,CAACC,KAAN,CAAYE,IAFtB;AAGI,IAAA,KAAK,EAAEH,KAAK,CAACI,KAHjB;AAII,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,UAAMC,OAAN,QAAMA,OAAN;AAAA,aAAoBN,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBD,OAArB,CAApB;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB;AAAA,CAA5B;;AASA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAR,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,QAAN,oBACQA,KAAK,CAACC,KADd;AAEI,IAAA,KAAK,EAAED,KAAK,CAACI,KAFjB;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACS,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA,CAA5B;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAV,KAAK,EAAI;AAC/B,sBAAC,IAAD,CAAM,KAAN;AACI,IAAA,IAAI,EAAEA,KAAK,CAACC,KAAN,CAAYC,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,CAJD;;AAMA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,MACjBC,YADiB,GACOD,KADP,CACjBC,YADiB;AAAA,MACHC,KADG,GACOF,KADP,CACHE,KADG;AAGzB,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,SAAS,EAAEd,cADX;AAEA,IAAA,KAAK,EAAC,MAFN;AAGA,IAAA,IAAI,EAAC,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAWH,CAdD;;AAgBA,eAAeF,SAAS,CAAC;AACrBkB,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZJ,WAFY,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form } from \"semantic-ui-react\";\n\nconst renderCheckbox = field => (\n    <Form.Checkbox\n        checked={!!field.input.value}\n        name={field.input.name}\n        label={field.label}\n        onChange={(e, { checked }) => field.input.onChange(checked)}\n    />\n);\n\nconst renderTextArea = field => (\n    <Form.TextArea\n        {...field.input}\n        label={field.label}\n        placeholder={field.placeholder}\n    />\n);\n\nconst renderTextField = field => {\n  <Form.Input\n      name={field.input.value}\n  />\n};\n\nconst FormBuilder = props => {\n    const { handleSubmit, reset } = props;\n\n    return (\n        <Fragment>\n            <Form onSubmit={handleSubmit}>\n                <Field\n                component={renderCheckbox}\n                label='Test'\n                name='Testtttt'\n                />\n            </Form>\n        </Fragment>\n    )\n};\n\nexport default reduxForm({\n    form: \"profile\"\n})(FormBuilder);"]},"metadata":{},"sourceType":"module"}