{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Divider, Header, Message } from \"semantic-ui-react\";\nimport ProfileForm from \"./ProfileForm\";\n\nvar App = function App(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(Header, {\n    as: \"h1\",\n    dividing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"A sample form with Semantic UI React and Redux Form\"), React.createElement(ProfileForm, {\n    onSubmit: function onSubmit() {\n      return console.log(\"ProfileForm was submitted\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Form data:\"), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, JSON.stringify(props, null, 2))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state.form.profile ? {\n    values: state.form.profile.values,\n    submitSucceeded: state.form.profile.submitSucceeded\n  } : {};\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/App.js"],"names":["React","connect","Container","Divider","Header","Message","ProfileForm","App","props","console","log","JSON","stringify","mapStateToProps","state","form","profile","values","submitSucceeded"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,mBAApD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK;AAAA,SACf,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHF,EAME,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN;AAAA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFF,CARF,CADe;AAAA,CAAjB;;AAgBA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAOA,KAAK,CAACC,IAAN,CAAWC,OAAX,GACH;AACEC,IAAAA,MAAM,EAAEH,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBC,MAD7B;AAEEC,IAAAA,eAAe,EAAEJ,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBE;AAFtC,GADG,GAKH,EALJ;AAMD,CAPD;;AASA,eAAejB,OAAO,CAACY,eAAD,CAAP,CAAyBN,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Divider, Header, Message } from \"semantic-ui-react\";\n\nimport ProfileForm from \"./ProfileForm\";\n\nconst App = props => (\n  <Container>\n    <Divider hidden />\n\n    <Header as=\"h1\" dividing>\n      A sample form with Semantic UI React and Redux Form\n    </Header>\n    <ProfileForm onSubmit={() => console.log(\"ProfileForm was submitted\")} />\n\n    <Message>\n      <Message.Header>Form data:</Message.Header>\n      <pre>{JSON.stringify(props, null, 2)}</pre>\n    </Message>\n  </Container>\n);\n\nconst mapStateToProps = state => {\n  return state.form.profile\n    ? {\n        values: state.form.profile.values,\n        submitSucceeded: state.form.profile.submitSucceeded\n      }\n    : {};\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}