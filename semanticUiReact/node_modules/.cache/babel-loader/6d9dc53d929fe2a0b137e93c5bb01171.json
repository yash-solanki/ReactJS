{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/formBuilder.js\";\nimport React, { Fragment } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form } from \"semantic-ui-react\";\n\nvar renderCheckbox = function renderCheckbox(field) {\n  return React.createElement(Form.Checkbox, {\n    checked: !!field.input.value,\n    name: field.input.name,\n    label: field.label,\n    onChange: function onChange(e, _ref) {\n      var checked = _ref.checked;\n      return field.input.onChange(checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nvar renderTextArea = function renderTextArea(field) {\n  return React.createElement(Form.TextArea, Object.assign({}, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nvar renderTextField = function renderTextField(field) {\n  return React.createElement(Form.Input, Object.assign({}, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nvar FormBuilder = function FormBuilder(props) {\n  var handleSubmit = props.handleSubmit,\n      reset = props.reset,\n      datas = props.datas;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, datas.map(function (data) {\n    return React.createElement(Field, {\n      component: data.Type === 'checkbox' && renderCheckbox,\n      label: data.label,\n      name: data.name,\n      placeholder: data.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default reduxForm({\n  form: \"profile\"\n})(FormBuilder);","map":{"version":3,"sources":["/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/formBuilder.js"],"names":["React","Fragment","Field","reduxForm","Form","renderCheckbox","field","input","value","name","label","e","checked","onChange","renderTextArea","placeholder","renderTextField","FormBuilder","props","handleSubmit","reset","datas","map","data","Type","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,QAAN;AACI,IAAA,OAAO,EAAE,CAAC,CAACA,KAAK,CAACC,KAAN,CAAYC,KAD3B;AAEI,IAAA,IAAI,EAAEF,KAAK,CAACC,KAAN,CAAYE,IAFtB;AAGI,IAAA,KAAK,EAAEH,KAAK,CAACI,KAHjB;AAII,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,UAAMC,OAAN,QAAMA,OAAN;AAAA,aAAoBN,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBD,OAArB,CAApB;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB;AAAA,CAA5B;;AASA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAR,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,QAAN,oBACQA,KAAK,CAACC,KADd;AAEI,IAAA,KAAK,EAAED,KAAK,CAACI,KAFjB;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACS,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA,CAA5B;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAV,KAAK;AAAA,SACzB,oBAAC,IAAD,CAAM,KAAN,oBACQA,KAAK,CAACC,KADd;AAEI,IAAA,KAAK,EAAED,KAAK,CAACI,KAFjB;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACS,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADyB;AAAA,CAA7B;;AASA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,MACjBC,YADiB,GACcD,KADd,CACjBC,YADiB;AAAA,MACHC,KADG,GACcF,KADd,CACHE,KADG;AAAA,MACIC,KADJ,GACcH,KADd,CACIG,KADJ;AAGzB,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,WACI,oBAAC,KAAD;AACA,MAAA,SAAS,EAAEA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4BnB,cADvC;AAEA,MAAA,KAAK,EAAEkB,IAAI,CAACb,KAFZ;AAGA,MAAA,IAAI,EAAEa,IAAI,CAACd,IAHX;AAIA,MAAA,WAAW,EAAEc,IAAI,CAACR,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH,GATA,CADL,CADJ,CADJ;AAqBH,CAxBD;;AA0BA,eAAeZ,SAAS,CAAC;AACrBsB,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZR,WAFY,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form } from \"semantic-ui-react\";\n\nconst renderCheckbox = field => (\n    <Form.Checkbox\n        checked={!!field.input.value}\n        name={field.input.name}\n        label={field.label}\n        onChange={(e, { checked }) => field.input.onChange(checked)}\n    />\n);\n\nconst renderTextArea = field => (\n    <Form.TextArea\n        {...field.input}\n        label={field.label}\n        placeholder={field.placeholder}\n    />\n);\n\nconst renderTextField = field => (\n    <Form.Input\n        {...field.input}\n        label={field.label}\n        placeholder={field.placeholder}\n    />\n);\n\n\nconst FormBuilder = props => {\n    const { handleSubmit, reset, datas } = props;\n\n    return (\n        <Fragment>\n            <Form onSubmit={handleSubmit}>\n                {datas.map(data => {\n                    return (\n                        <Field\n                        component={data.Type === 'checkbox' && renderCheckbox }\n                        label={data.label}\n                        name={data.name}\n                        placeholder={data.placeholder}\n                        />\n                    )\n                })}\n                {/*<Field\n                component={renderCheckbox}\n                label='Test'\n                name='Testtttt'\n                />*/}\n            </Form>\n        </Fragment>\n    )\n};\n\nexport default reduxForm({\n    form: \"profile\"\n})(FormBuilder);"]},"metadata":{},"sourceType":"module"}