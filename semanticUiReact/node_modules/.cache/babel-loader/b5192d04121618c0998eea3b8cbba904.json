{"ast":null,"code":"var _jsxFileName = \"/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/ProfileForm.js\";\nimport React, { Fragment } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form } from \"semantic-ui-react\";\n\nvar renderCheckbox = function renderCheckbox(field) {\n  return React.createElement(Form.Checkbox, {\n    checked: !!field.input.value,\n    name: field.input.name,\n    label: field.label,\n    onChange: function onChange(e, _ref) {\n      var checked = _ref.checked;\n      return field.input.onChange(checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nvar renderRadio = function renderRadio(field) {\n  return React.createElement(Form.Radio, {\n    checked: field.input.value === field.radioValue,\n    label: field.label,\n    name: field.input.name,\n    onChange: function onChange(e, _ref2) {\n      var checked = _ref2.checked;\n      return field.input.onChange(field.radioValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nvar renderSelect = function renderSelect(field) {\n  return React.createElement(Form.Select, {\n    label: field.label,\n    name: field.input.name,\n    onChange: function onChange(e, _ref3) {\n      var value = _ref3.value;\n      return field.input.onChange(value);\n    },\n    options: field.options,\n    placeholder: field.placeholder,\n    value: field.input.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n};\n\nvar renderTextArea = function renderTextArea(field) {\n  return React.createElement(Form.TextArea, Object.assign({}, field.input, {\n    label: field.label,\n    placeholder: field.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nvar ProfileForm = function ProfileForm(props) {\n  var handleSubmit = props.handleSubmit,\n      reset = props.reset;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: Form.Input,\n    label: \"First name\",\n    name: \"firstName\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: Form.Input,\n    label: \"Last name\",\n    name: \"lastName\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderSelect,\n    label: \"Gender\",\n    name: \"gender\",\n    options: [{\n      key: \"m\",\n      text: \"Male\",\n      value: \"male\"\n    }, {\n      key: \"f\",\n      text: \"Female\",\n      value: \"female\"\n    }],\n    placeholder: \"Gender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(Field, {\n    component: renderRadio,\n    label: \"One\",\n    name: \"quantity\",\n    radioValue: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderRadio,\n    label: \"Two\",\n    name: \"quantity\",\n    radioValue: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderRadio,\n    label: \"Three\",\n    name: \"quantity\",\n    radioValue: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Field, {\n    component: renderTextArea,\n    label: \"About\",\n    name: \"about\",\n    placeholder: \"Tell us more about you...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderCheckbox,\n    label: \"I agree to the Terms and Conditions\",\n    name: \"isAgreed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Form.Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Form.Button, {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Reset\"))));\n};\n\nexport default reduxForm({\n  form: \"profile\"\n})(ProfileForm);","map":{"version":3,"sources":["/home/ad.rapidops.com/yash.solanki/Practice/ReactJS/semanticUiReact/src/components/ProfileForm.js"],"names":["React","Fragment","Field","reduxForm","Form","renderCheckbox","field","input","value","name","label","e","checked","onChange","renderRadio","radioValue","renderSelect","options","placeholder","renderTextArea","ProfileForm","props","handleSubmit","reset","Input","key","text","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAC1B,oBAAC,IAAD,CAAM,QAAN;AACE,IAAA,OAAO,EAAE,CAAC,CAACA,KAAK,CAACC,KAAN,CAAYC,KADzB;AAEE,IAAA,IAAI,EAAEF,KAAK,CAACC,KAAN,CAAYE,IAFpB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAIE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,UAAMC,OAAN,QAAMA,OAAN;AAAA,aAAoBN,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBD,OAArB,CAApB;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD0B;AAAA,CAA5B;;AASA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAR,KAAK;AAAA,SACvB,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,OAAO,EAAEA,KAAK,CAACC,KAAN,CAAYC,KAAZ,KAAsBF,KAAK,CAACS,UADvC;AAEE,IAAA,KAAK,EAAET,KAAK,CAACI,KAFf;AAGE,IAAA,IAAI,EAAEJ,KAAK,CAACC,KAAN,CAAYE,IAHpB;AAIE,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,UAAMC,OAAN,SAAMA,OAAN;AAAA,aAAoBN,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBP,KAAK,CAACS,UAA3B,CAApB;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuB;AAAA,CAAzB;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAV,KAAK;AAAA,SACxB,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAEA,KAAK,CAACI,KADf;AAEE,IAAA,IAAI,EAAEJ,KAAK,CAACC,KAAN,CAAYE,IAFpB;AAGE,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,UAAMH,KAAN,SAAMA,KAAN;AAAA,aAAkBF,KAAK,CAACC,KAAN,CAAYM,QAAZ,CAAqBL,KAArB,CAAlB;AAAA,KAHZ;AAIE,IAAA,OAAO,EAAEF,KAAK,CAACW,OAJjB;AAKE,IAAA,WAAW,EAAEX,KAAK,CAACY,WALrB;AAME,IAAA,KAAK,EAAEZ,KAAK,CAACC,KAAN,CAAYC,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB;AAAA,CAA1B;;AAWA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAAAb,KAAK;AAAA,SAC1B,oBAAC,IAAD,CAAM,QAAN,oBACMA,KAAK,CAACC,KADZ;AAEE,IAAA,KAAK,EAAED,KAAK,CAACI,KAFf;AAGE,IAAA,WAAW,EAAEJ,KAAK,CAACY,WAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0B;AAAA,CAA5B;;AAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,MACnBC,YADmB,GACKD,KADL,CACnBC,YADmB;AAAA,MACLC,KADK,GACKF,KADL,CACLE,KADK;AAG3B,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAElB,IAAI,CAACoB,KADlB;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,WAAW,EAAC,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEpB,IAAI,CAACoB,KADlB;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAER,YADb;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAE,CACP;AAAES,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,MAAlB;AAA0BlB,MAAAA,KAAK,EAAE;AAAjC,KADO,EAEP;AAAEiB,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,QAAlB;AAA4BlB,MAAAA,KAAK,EAAE;AAAnC,KAFO,CAJX;AAQE,IAAA,WAAW,EAAC,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EA0BE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEM,WADb;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,UAAU,EAAE,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEA,WADb;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,UAAU,EAAE,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAeE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEA,WADb;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,UAAU,EAAE,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CA1BF,EAiDE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEK,cADb;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,EAwDE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEd,cADb;AAEE,IAAA,KAAK,EAAC,qCAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDF,EA8DE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,EAAEkB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CA9DF,CADF,CADF;AAuED,CA1ED;;AA4EA,eAAepB,SAAS,CAAC;AACvBwB,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZP,WAFY,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form } from \"semantic-ui-react\";\n\nconst renderCheckbox = field => (\n  <Form.Checkbox\n    checked={!!field.input.value}\n    name={field.input.name}\n    label={field.label}\n    onChange={(e, { checked }) => field.input.onChange(checked)}\n  />\n);\n\nconst renderRadio = field => (\n  <Form.Radio\n    checked={field.input.value === field.radioValue}\n    label={field.label}\n    name={field.input.name}\n    onChange={(e, { checked }) => field.input.onChange(field.radioValue)}\n  />\n);\n\nconst renderSelect = field => (\n  <Form.Select\n    label={field.label}\n    name={field.input.name}\n    onChange={(e, { value }) => field.input.onChange(value)}\n    options={field.options}\n    placeholder={field.placeholder}\n    value={field.input.value}\n  />\n);\n\nconst renderTextArea = field => (\n  <Form.TextArea\n    {...field.input}\n    label={field.label}\n    placeholder={field.placeholder}\n  />\n);\n\nconst ProfileForm = props => {\n  const { handleSubmit, reset } = props;\n\n  return (\n    <Fragment>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group widths=\"equal\">\n          <Field\n            component={Form.Input}\n            label=\"First name\"\n            name=\"firstName\"\n            placeholder=\"First name\"\n          />\n          <Field\n            component={Form.Input}\n            label=\"Last name\"\n            name=\"lastName\"\n            placeholder=\"Last name\"\n          />\n          <Field\n            component={renderSelect}\n            label=\"Gender\"\n            name=\"gender\"\n            options={[\n              { key: \"m\", text: \"Male\", value: \"male\" },\n              { key: \"f\", text: \"Female\", value: \"female\" }\n            ]}\n            placeholder=\"Gender\"\n          />\n        </Form.Group>\n\n        <Form.Group inline>\n          <label>Quantity</label>\n\n          <Field\n            component={renderRadio}\n            label=\"One\"\n            name=\"quantity\"\n            radioValue={1}\n          />\n          <Field\n            component={renderRadio}\n            label=\"Two\"\n            name=\"quantity\"\n            radioValue={2}\n          />\n          <Field\n            component={renderRadio}\n            label=\"Three\"\n            name=\"quantity\"\n            radioValue={3}\n          />\n        </Form.Group>\n\n        <Field\n          component={renderTextArea}\n          label=\"About\"\n          name=\"about\"\n          placeholder=\"Tell us more about you...\"\n        />\n\n        <Field\n          component={renderCheckbox}\n          label=\"I agree to the Terms and Conditions\"\n          name=\"isAgreed\"\n        />\n\n        <Form.Group inline>\n          <Form.Button primary>Submit</Form.Button>\n          <Form.Button onClick={reset}>Reset</Form.Button>\n        </Form.Group>\n      </Form>\n    </Fragment>\n  );\n};\n\nexport default reduxForm({\n  form: \"profile\"\n})(ProfileForm);\n"]},"metadata":{},"sourceType":"module"}